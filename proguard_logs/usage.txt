com.andrefy.ddviewlist.DDListView$RemoveListener
com.paypal.android.MEP.CheckoutButton:
    public static final int TEXT_PAY
    public static final int TEXT_DONATE
com.paypal.android.MEP.MEPAddress:
    public java.lang.String getStreet1()
    public java.lang.String getStreet2()
    public java.lang.String getCity()
    public java.lang.String getState()
    public java.lang.String getPostalcode()
    public java.lang.String getCountrycode()
com.paypal.android.MEP.MEPAmounts:
    public java.lang.String getCurrency()
    public void setPaymentAmount(java.lang.String)
    public void setTax(java.lang.String)
    public void setShipping(java.lang.String)
com.paypal.android.MEP.PayPal:
    public static final int PAY_TYPE_SIMPLE
    public static final int PAY_TYPE_PARALLEL
    public static final int PAY_TYPE_CHAINED
    public static final int PAY_TYPE_PREAPPROVAL
    public static final int PAYMENT_TYPE_GOODS
    public static final int PAYMENT_TYPE_SERVICE
    public static final int PAYMENT_TYPE_PERSONAL
    public static final int PAYMENT_TYPE_NONE
    public static final int PAYMENT_SUBTYPE_AFFILIATE
    public static final int PAYMENT_SUBTYPE_B2B
    public static final int PAYMENT_SUBTYPE_PAYROLL
    public static final int PAYMENT_SUBTYPE_REBATES
    public static final int PAYMENT_SUBTYPE_REFUNDS
    public static final int PAYMENT_SUBTYPE_REIMBUSEMENTS
    public static final int PAYMENT_SUBTYPE_REIMBURSEMENTS
    public static final int PAYMENT_SUBTYPE_DONATIONS
    public static final int PAYMENT_SUBTYPE_UTILITIES
    public static final int PAYMENT_SUBTYPE_TUITION
    public static final int PAYMENT_SUBTYPE_GOVERNMENT
    public static final int PAYMENT_SUBTYPE_INSURANCE
    public static final int PAYMENT_SUBTYPE_REMITTANCES
    public static final int PAYMENT_SUBTYPE_RENT
    public static final int PAYMENT_SUBTYPE_MORTGAGE
    public static final int PAYMENT_SUBTYPE_MEDICAL
    public static final int PAYMENT_SUBTYPE_CHILDCARE
    public static final int PAYMENT_SUBTYPE_EVENTS
    public static final int PAYMENT_SUBTYPE_CONTRACTORS
    public static final int PAYMENT_SUBTYPE_ENTERTAINMENT
    public static final int PAYMENT_SUBTYPE_TOURISM
    public static final int PAYMENT_SUBTYPE_INVOICE
    public static final int PAYMENT_SUBTYPE_TRANSFER
    public static final int PAYMENT_SUBTYPE_NONE
    public static final int BUTTON_152x33
    public static final int BUTTON_194x37
    public static final int BUTTON_278x43
    public static final int BUTTON_294x45
    public static final int NUM_STYLES
    public static final int ENV_SANDBOX
    public static final int ENV_LIVE
    public static final int ENV_NONE
    public static final int FEEPAYER_EACHRECEIVER
    public static final int FEEPAYER_SENDER
    public static final int FEEPAYER_PRIMARYRECEIVER
    public static final int FEEPAYER_SECONDARYONLY
    public static final int LOGIN_VIA_EMAIL
    public static final int LOGIN_VIA_PHONE
    public static final int LOGIN_VIA_DRT
    public static final int LOGIN_VIA_EMAIL_EBAY_USER
    public static final int AUTH_SETTING_DISABLED
    public static final int AUTH_SETTING_ENABLED
    public final void shutdown()
    public final android.content.Intent checkout(com.paypal.android.MEP.PayPalPayment,android.content.Context,com.paypal.android.MEP.PaymentAdjuster)
    public final android.content.Intent checkout(com.paypal.android.MEP.PayPalPayment,android.content.Context)
    public final android.content.Intent checkout(com.paypal.android.MEP.PayPalAdvancedPayment,android.content.Context,com.paypal.android.MEP.PayPalResultDelegate)
    public final android.content.Intent checkout(com.paypal.android.MEP.PayPalAdvancedPayment,android.content.Context,com.paypal.android.MEP.PaymentAdjuster)
    public final android.content.Intent checkout(com.paypal.android.MEP.PayPalAdvancedPayment,android.content.Context)
    public final android.content.Intent preapprove(com.paypal.android.MEP.PayPalPreapproval,android.content.Context,com.paypal.android.MEP.PayPalResultDelegate)
    public final android.content.Intent preapprove(com.paypal.android.MEP.PayPalPreapproval,android.content.Context)
    public final java.lang.String getFlowContext()
    public final void setPreapprovalKey(java.lang.String)
    public final java.lang.String getDeviceReferenceToken()
    public final void setDeviceReferenceToken(java.lang.String)
    public final java.lang.String getSessionToken()
    public final void setSessionToken(java.lang.String)
    public final void setAdjustPaymentError(java.lang.String)
com.paypal.android.MEP.PayPalActivity:
    public static final java.lang.String EXTRA_PAYMENT_ADJUSTER
    public static final java.lang.String EXTRA_PAYMENT_INFO
    public static final java.lang.String EXTRA_PREAPPROVAL_INFO
    public static final java.lang.String EXTRA_ERROR_ID
    public static final java.lang.String EXTRA_ERROR_MESSAGE
    public static final java.lang.String EXTRA_PAY_KEY
    public static final java.lang.String EXTRA_PAYMENT_STATUS
    public static final java.lang.String EXTRA_CORRELATION_ID
    public static final java.lang.String EXTRA_RESULT_DELEGATE
    public static final int RESULT_FAILURE
    public static final int VIEW_LOGIN
    public static final int VIEW_INFO
    public static final int VIEW_ABOUT
    public static final int VIEW_REVIEW
    public static final int VIEW_SUCCESS
    public static final int VIEW_FATAL_ERROR
    public static final int VIEW_PREAPPROVAL
    public static final int VIEW_CREATE_PIN
    public static final int VIEW_TEST
    public static final int VIEW_NUM_VIEWS
    public final com.paypal.android.b.j getDialog()
    public final com.paypal.android.MEP.MEPAmounts AdjustAmounts(com.paypal.android.MEP.MEPAddress,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.paypal.android.MEP.PayPalAdvancedPayment:
    private static final long serialVersionUID
    public void setCurrencyType(java.util.Currency)
    public void setReceivers(java.util.ArrayList)
    public java.math.BigDecimal getTotalSubtotal()
    public void setMerchantName(java.lang.String)
com.paypal.android.MEP.PayPalInvoiceData:
    private static final long serialVersionUID
    public PayPalInvoiceData()
    public PayPalInvoiceData(java.math.BigDecimal,java.math.BigDecimal)
    public void setInvoiceItems(java.util.ArrayList)
    public void add(com.paypal.android.MEP.PayPalInvoiceItem)
com.paypal.android.MEP.PayPalInvoiceItem:
    private static final long serialVersionUID
    public PayPalInvoiceItem(java.lang.String,java.lang.String,java.math.BigDecimal,int)
    public void setName(java.lang.String)
    public void setID(java.lang.String)
    public void setTotalPrice(java.math.BigDecimal)
    public void setUnitPrice(java.math.BigDecimal)
    public void setQuantity(int)
com.paypal.android.MEP.PayPalPayment:
    private static final long serialVersionUID
    public PayPalPayment(java.lang.String,java.util.Currency,int,com.paypal.android.MEP.PayPalInvoiceData,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public java.lang.String getDescription()
    public void setCurrencyType(java.util.Currency)
    public void setInvoiceData(com.paypal.android.MEP.PayPalInvoiceData)
    public void setPaymentSubtype(int)
    public void setDescription(java.lang.String)
com.paypal.android.MEP.PayPalPreapproval:
    public static final int PERIOD_DAILY
    public static final int PERIOD_WEEKLY
    public static final int PERIOD_BIWEEKLY
    public static final int PERIOD_SEMIMONTHLY
    public static final int PERIOD_MONTHLY
    public static final int PERIOD_ANNUALLY
    public static final int PERIOD_NONE
    public static final int DAY_SUNDAY
    public static final int DAY_MONDAY
    public static final int DAY_TUESDAY
    public static final int DAY_WEDNESDAY
    public static final int DAY_THURSDAY
    public static final int DAY_FRIDAY
    public static final int DAY_SATURDAY
    public static final int DAY_NONE
    public static final int TYPE_AGREE
    public static final int TYPE_AGREE_AND_PAY
    private static final long serialVersionUID
    public java.lang.String getCurrencyType()
    public int getMaxNumberOfPayments()
    public java.math.BigDecimal getMaxAmountPerPayment()
    public java.math.BigDecimal getMaxTotalAmountOfAllPayments()
    public boolean getIsApproved()
    public int getPaymentPeriod()
    public int getDayOfWeek()
    public int getDayOfMonth()
    public int getMaxNumberOfPaymentsPerPeriod()
    public java.lang.String getIpnUrl()
    public java.lang.String getMemo()
    public void setMerchantName(java.lang.String)
    public void setType(int)
com.paypal.android.MEP.PayPalReceiverDetails:
    private static final long serialVersionUID
com.paypal.android.MEP.PaymentAdjuster:
    public abstract com.paypal.android.MEP.MEPAmounts adjustAmount(com.paypal.android.MEP.MEPAddress,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.paypal.android.MEP.a.d$1:
    public d$1()
com.paypal.android.a.a:
    private a()
com.paypal.android.a.a.d:
    private static final long serialVersionUID
com.paypal.android.a.a.e:
    private static final long serialVersionUID
com.paypal.android.a.a.j:
    public j()
com.paypal.android.a.d:
    public d()
com.paypal.android.a.e:
    public e()
com.paypal.android.a.f:
    private static final long serialVersionUID
com.paypal.android.a.g:
    public static void b()
com.paypal.android.a.h:
    public h()
    public static void a()
com.paypal.android.a.l:
    public l()
    static void <clinit>()
com.paypal.android.a.m:
    public m()
    public static java.lang.String b()
com.paypal.android.a.n:
    private static final long serialVersionUID
com.paypal.android.a.o:
    public o()
com.paypal.android.simpledemo.ResultDelegate
com.qweex.callisto.BuildConfig
com.qweex.callisto.CalendarActivity:
    private static final java.lang.String CALENDAR_FEED_URL
    353:367:private int timezoneDifference()
com.qweex.callisto.ContactForm$JavascriptInterface:
    236:244:public void CustomCSSApplier(java.lang.String)
    252:257:public void saveDraft(java.lang.String)
    262:264:public void safeDraftAndFinish(java.lang.String)
com.qweex.callisto.DatabaseConnector:
    private static final java.lang.String DATABASE_NAME
    private static final java.lang.String DATABASE_EPISODES
    private static final java.lang.String DATABASE_QUEUE
    private static final java.lang.String DATABASE_CALENDAR
    64:66:public void close()
    169:170:public void deleteEpisode(long)
com.qweex.callisto.DatabaseConnector$DatabaseOpenHelper:
    static final int DB_VERSION
com.qweex.callisto.Live:
    private static final java.lang.String errorReportURL
    49:172:public Live()
com.qweex.callisto.Live$FetchInfo:
    private static final java.lang.String infoURL
com.qweex.callisto.PlayerControls:
    public static android.widget.TextView totalTime
    public static android.widget.SeekBar seekBar
    41:41:public PlayerControls()
com.qweex.callisto.PlayerInfo:
    public android.media.MediaPlayer player
    public static final int SAVE_POSITION_EVERY
    public static final int CHECK_LIVE_EVERY
com.qweex.callisto.QuickPrefsActivity:
    public static final java.lang.String DONATION_APP
com.qweex.callisto.R
com.qweex.callisto.R$array
com.qweex.callisto.R$attr
com.qweex.callisto.R$color
com.qweex.callisto.R$drawable
com.qweex.callisto.R$id
com.qweex.callisto.R$layout
com.qweex.callisto.R$raw
com.qweex.callisto.R$string
com.qweex.callisto.R$style
com.qweex.callisto.R$xml
com.qweex.callisto.StaticBlob:
    public static final int NOTIFICATION_ID
    public static final java.lang.String PREF_FILE
    38:38:public StaticBlob()
com.qweex.callisto.VideoActivity:
    android.view.View login
com.qweex.callisto.donate.Donate:
    private static final int NAME_ID
    private static final int RADIO_ID
    private static final java.lang.String paypalEmail
    private static final int server
    private static final java.lang.String appID
    private static final int request
    protected static final int INITIALIZE_SUCCESS
    protected static final int INITIALIZE_FAILURE
com.qweex.callisto.donate.ResultDelegate:
    private static final long serialVersionUID
com.qweex.callisto.irc.IRCChat:
    protected static final int LOG_ID
    protected static final int CHANGE_ID
    protected static final int LOGOUT_ID
    protected static final int NICKLIST_ID
    protected static final int SAVE_ID
    1533:1538:private boolean isAcceptable(int)
com.qweex.callisto.listeners.OnErrorListenerWithContext:
    android.content.Context c
    26:27:public void setContext(android.content.Context)
com.qweex.callisto.podcast.DownloadList:
    public static final java.lang.String ACTIVE
    public static final java.lang.String COMPLETED
    private static final int CLEAR_COMP_ID
    private static final int CLEAR_ACTIVE_ID
    private static final int PAUSE_ID
com.qweex.callisto.podcast.DownloadList$DownloadHeader:
    380:380:public java.lang.String getText()
com.qweex.callisto.podcast.EpisodeDesc:
    private static final int STOP_ID
    private static final int SHARE_ID
com.qweex.callisto.podcast.ShowList:
    private static final int STOP_ID
    private static final int RELOAD_ID
    private static final int CLEAR_ID
    private static final int FILTER_ID
    private static final int MARK_ID
com.qweex.callisto.receivers.AlarmNotificationReceiver:
    public static final java.lang.String PREF_FILE
com.qweex.callisto.receivers.BootNotificationReceiver:
    public static final java.lang.String PREF_FILE
com.qweex.utils.ImgTxtButton:
    public static final int HORIZONTAL
    public static final int VERTICAL
    135:136:public void hideText()
    140:141:public void showText()
    145:146:public void hideImage()
    150:151:public void showImage()
com.qweex.utils.QweexUtils:
    31:31:public QweexUtils()
com.qweex.utils.UnfinishedParseException:
    private static final long serialVersionUID
com.qweex.utils.XBMCStyleListViewMenu:
    251:252:public void removeOnMainItemClickListener()
jerklib.Channel:
    185:191:public java.util.List getUsersModes(java.lang.String)
    208:217:public java.util.List getNicksForMode(jerklib.ModeAdjustment$Action,char)
    229:229:public java.util.List getChannelModes()
    252:252:public java.lang.String getTopic()
    262:262:public java.lang.String getTopicSetter()
    272:272:public java.util.Date getTopicSetTime()
    282:283:public void setTopic(java.lang.String)
    322:323:public void notice(java.lang.String)
    420:421:public void action(java.lang.String)
    428:429:public void names()
    437:438:public void deVoice(java.lang.String)
    446:447:public void voice(java.lang.String)
    464:465:public void deop(java.lang.String)
jerklib.Connection:
    71:71:jerklib.Profile getProfile()
jerklib.ConnectionManager:
    112:113:public void setAutoReconnect(boolean)
    133:133:public java.util.List getSessions()
    144:144:public jerklib.Session getSession(java.lang.String)
    154:155:public void addWriteRequestListener(jerklib.listeners.WriteRequestListener)
    175:175:public jerklib.Session requestConnection(java.lang.String)
    259:259:public jerklib.Profile getDefaultProfile()
    270:271:public void setDefaultProfile(jerklib.Profile)
    286:287:public void setDefaultInternalEventHandler(jerklib.listeners.IRCEventListener)
    295:295:public jerklib.listeners.IRCEventListener getDefaultEventHandler()
    305:306:public void setDefaultInternalEventParser(jerklib.parsers.InternalEventParser)
    314:314:public jerklib.parsers.InternalEventParser getDefaultInternalEventParser()
jerklib.DefaultInternalEventHandler:
    63:64:public void addEventHandler(jerklib.events.IRCEvent$Type,jerklib.listeners.IRCEventListener)
    76:76:public boolean removeEventHandler(jerklib.events.IRCEvent$Type)
    87:87:public jerklib.listeners.IRCEventListener getEventHandler(jerklib.events.IRCEvent$Type)
jerklib.Profile:
    42:49:public Profile(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    62:63:public Profile(java.lang.String,java.lang.String,java.lang.String)
    158:159:public void setRealName(java.lang.String)
jerklib.RequestGenerator:
    70:71:public void chanList()
    81:82:public void chanList(java.lang.String)
    102:103:public void join(java.lang.String,java.lang.String)
    124:125:public void notice(java.lang.String,java.lang.String)
    151:152:public void getServerVersion()
    161:162:public void getServerVersion(java.lang.String)
jerklib.RequestedConnection:
    68:68:public long getTimeRequested()
    100:101:void setProfile(jerklib.Profile)
jerklib.ServerInformation:
    308:316:public java.lang.String[] getModes(jerklib.ServerInformation$ModeType)
    349:349:public java.lang.String getIrcdString()
    360:360:public java.lang.String getCaseMapping()
    372:372:public int getChannelJoinLimitForPrefix(java.lang.String)
    382:382:public java.lang.String[] getSupportedChannelModes()
    393:393:public boolean supportsCAPAB()
    403:403:public boolean supportsCNotice()
    413:413:public boolean supportsCPrivMsg()
    423:423:public boolean supportsWhox()
    433:433:public boolean supportsWallChops()
    443:443:public boolean supportsWallVoices()
    453:453:public boolean supportsBanExceptions()
    463:463:public boolean supportsInviteExceptions()
    474:474:public boolean supportsKnock()
    484:484:public boolean supportsUserIp()
    494:494:public boolean supportsEtrace()
    504:504:public boolean supportsSafeList()
    514:514:public boolean supportsSilenceList()
    524:524:public boolean supportsNickPrefixes()
    534:534:public boolean supportsStatusNotices()
    545:545:public int getMaxModesPerCommnad()
    555:555:public int getMaxAwayLength()
    565:565:public int getMaxKickLength()
    575:575:public int getMaxNickLength()
    585:585:public int getMaxSilenceListSize()
    595:595:public int getMaxTopicLength()
    605:605:public int getMaxChannelNameLength()
    615:615:public int getMaxKeyLength()
    625:625:public int getMaxHostLength()
    635:635:public int getMaxUserLength()
    646:646:public java.util.List getNickPrefixes()
    666:666:public java.lang.String[] getStatusPrefixes()
jerklib.Session:
    private jerklib.listeners.IRCEventListener internalEventHandler
    122:123:public void setInternalEventHandler(jerklib.listeners.IRCEventListener)
    135:135:public jerklib.listeners.IRCEventListener getInternalEventHandler()
    212:212:public java.util.List getUserModes()
    293:294:public void setShouldUseAltNicks(boolean)
    433:433:public boolean removeIRCEventListener(jerklib.listeners.IRCEventListener)
    455:456:public void onEvent(jerklib.tasks.Task)
    469:485:public varargs void onEvent(jerklib.tasks.Task,jerklib.events.IRCEvent$Type[])
    508:519:public void removeTask(jerklib.tasks.Task)
    530:530:public java.util.List getChannels()
    43:43:public bridge synthetic void getServerVersion(java.lang.String)
    43:43:public bridge synthetic void getServerVersion()
    43:43:public bridge synthetic void notice(java.lang.String,java.lang.String)
    43:43:public bridge synthetic void join(java.lang.String,java.lang.String)
    43:43:public bridge synthetic void chanList(java.lang.String)
    43:43:public bridge synthetic void chanList()
jerklib.WriteRequest:
    131:131:jerklib.Connection getConnection()
jerklib.events.AwayEvent:
    106:106:public jerklib.events.AwayEvent$EventType getEventType()
jerklib.events.ChannelListEvent:
    41:41:public java.lang.String getChannelName()
    51:51:public int getNumberOfUser()
    62:62:public java.lang.String getTopic()
jerklib.events.ConnectionCompleteEvent:
    34:34:public java.lang.String getOldHostName()
jerklib.events.ConnectionLostEvent:
    24:24:public java.lang.Exception getException()
jerklib.events.ErrorEvent:
    31:31:public jerklib.events.ErrorEvent$ErrorType getErrorType()
jerklib.events.GenericErrorEvent:
    17:17:public java.lang.Exception getException()
jerklib.events.InviteEvent:
    28:28:public java.lang.String getChannelName()
jerklib.events.JoinEvent:
    37:37:public final java.lang.String getChannelName()
jerklib.events.MessageEvent:
    59:59:public boolean isPrivate()
jerklib.events.NickListEvent:
    37:37:public jerklib.Channel getChannel()
jerklib.events.NoticeEvent:
    55:55:public jerklib.Channel getChannel()
    65:65:public java.lang.String toWho()
jerklib.events.NumericErrorEvent:
    26:26:public java.lang.String getErrorMsg()
jerklib.events.QuitEvent:
    47:47:public final java.util.List getChannelList()
jerklib.events.ServerVersionEvent:
    39:39:public java.lang.String getComment()
    69:69:public java.lang.String getdebugLevel()
jerklib.events.UnresolvedHostnameErrorEvent:
    38:38:public java.nio.channels.UnresolvedAddressException getException()
jerklib.events.WhoEvent:
    91:91:public java.lang.String getChannel()
    101:101:public boolean isAway()
    112:112:public int getHopCount()
jerklib.events.WhoisEvent:
    private boolean isOp
    98:98:public boolean isAnOperator()
    108:108:public boolean isIdle()
    173:173:public java.lang.String whoisServerInfo()
jerklib.examples.DefaultListenerExample
jerklib.examples.Example
jerklib.examples.TaskExample
jerklib.examples.TaskExample$1
jerklib.examples.TaskExample$2
jerklib.examples.TaskExample$3
jerklib.examples.TaskExample$4
jerklib.listeners.DefaultIRCEventListener
jerklib.listeners.TaskCompletionListener
jerklib.parsers.DefaultInternalEventParser:
    39:40:public void removeAllParsers()
    44:45:public void addParser(java.lang.String,jerklib.parsers.CommandParser)
    49:49:public jerklib.parsers.CommandParser getParser(java.lang.String)
    54:54:public boolean removeParser(java.lang.String)
    59:60:public void setDefaultParser(jerklib.parsers.CommandParser)
    64:64:public jerklib.parsers.CommandParser getDefaultParser()
jerklib.tasks.OnceTaskImpl
jerklib.tasks.OnceUntilSucceedsTaskImpl
jerklib.tasks.Task:
    public abstract java.lang.String getName()
    public abstract void cancel()
jerklib.tasks.TaskImpl
jerklib.util.Colors
jerklib.util.InetAddressUtils
jerklib.util.NickServAuthPlugin
jerklib.util.NickServAuthPlugin$1
jerklib.util.Pair
net.margaritov.preference.colorpicker.ColorPickerDialog:
    116:116:public int getColor()
net.margaritov.preference.colorpicker.ColorPickerPanelView:
    private static final float BORDER_WIDTH_PX
net.margaritov.preference.colorpicker.ColorPickerPreference:
    private static final java.lang.String androidns
    183:184:public void setAlphaSliderEnabled(boolean)
    192:213:public static java.lang.String convertToARGB(int)
net.margaritov.preference.colorpicker.ColorPickerView:
    private static final int PANEL_SAT_VAL
    private static final int PANEL_HUE
    private static final int PANEL_ALPHA
    private static final float BORDER_WIDTH_PX
